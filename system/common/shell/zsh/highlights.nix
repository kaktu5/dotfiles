{theme}:
with theme.colors; let
  argument = "fg=#${yellow}";
  command = "fg=#${blue}";
  comment = "fg=#${bg3}";
  error = "fg=#${red}";
  keyword = "fg=#${purple}";
  operator = "fg=#${purple}";
  _path = "fg=#${lightBlue}";
  string = "fg=#${green}";
  substitution = "fg=#${lightBlue}";
  variable = "fg=#${orange}";
in {
  default = argument;
  unknown-token = error;
  reserved-word = keyword;
  alias = command;
  suffix-alias = command;
  global-alias = command;
  builtin = keyword;
  function = command;
  inherit command;
  precommand = command;
  commandseparator = operator;
  hashed-command = command;
  autodirectory = _path;
  path = _path;
  path_prefix = _path;
  globbing = operator;
  history-expansion = keyword;
  command-substitution = substitution;
  command-substitution-unquoted = substitution;
  command-substitution-quoted = substitution;
  command-substitution-delimiter = substitution;
  command-substitution-delimiter-unquoted = substitution;
  command-substitution-delimiter-quoted = substitution;
  process-substitution = substitution;
  process-substitution-delimiter = substitution;
  arithmetic-expansion = substitution;
  single-hyphen-option = argument;
  double-hyphen-option = argument;
  back-quoted-argument = variable;
  back-quoted-argument-unclosed = variable;
  back-quoted-argument-delimiter = variable;
  single-quoted-argument = string;
  single-quoted-argument-unclosed = string;
  double-quoted-argument = string;
  double-quoted-argument-unclosed = string;
  dollar-quoted-argument = string;
  dollar-quoted-argument-unclosed = string;
  rc-quote = operator;
  dollar-double-quoted-argument = variable;
  back-double-quoted-argument = operator;
  back-dollar-quoted-argument = operator;
  assign = variable;
  redirection = operator;
  inherit comment;
  named-fd = operator;
  numeric-df = operator;
  arg0 = command;
}
